// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Nova.SearchAlgorithm.Test.Validation.ValidationTests.Features.Scoring.Ranking
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Scoring - Ranking (match grades)")]
    public partial class Scoring_RankingMatchGradesFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "MatchGradeRanking.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Scoring - Ranking (match grades)", "  As a member of the search team\r\n  I want search results to be returned in an ap" +
                    "propriate order based on differing match grades", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Match grade ranking - gDNA vs cDNA")]
        public virtual void MatchGradeRanking_GDNAVsCDNA()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Match grade ranking - gDNA vs cDNA", ((string[])(null)));
#line 5
  this.ScenarioSetup(scenarioInfo);
#line 6
    testRunner.Given("a patient has multiple matches with different match grades", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
    testRunner.When("I run an 8/8 search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
    testRunner.Then("a full gDNA match should be returned above a full cDNA match", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Match grade ranking - gDNA vs protein")]
        public virtual void MatchGradeRanking_GDNAVsProtein()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Match grade ranking - gDNA vs protein", ((string[])(null)));
#line 10
  this.ScenarioSetup(scenarioInfo);
#line 11
    testRunner.Given("a patient has multiple matches with different match grades", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
    testRunner.When("I run an 8/8 search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
    testRunner.Then("a full gDNA match should be returned above a full protein match", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Match grade ranking - gDNA vs g-group")]
        public virtual void MatchGradeRanking_GDNAVsG_Group()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Match grade ranking - gDNA vs g-group", ((string[])(null)));
#line 15
  this.ScenarioSetup(scenarioInfo);
#line 16
    testRunner.Given("a patient has multiple matches with different match grades", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 17
    testRunner.When("I run an 8/8 search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
    testRunner.Then("a full gDNA match should be returned above a full g-group match", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Match grade ranking - gDNA vs p-group")]
        public virtual void MatchGradeRanking_GDNAVsP_Group()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Match grade ranking - gDNA vs p-group", ((string[])(null)));
#line 20
  this.ScenarioSetup(scenarioInfo);
#line 21
    testRunner.Given("a patient has multiple matches with different match grades", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
    testRunner.When("I run an 8/8 search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
    testRunner.Then("a full gDNA match should be returned above a full p-group match", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Match grade ranking - gDNA vs serology")]
        public virtual void MatchGradeRanking_GDNAVsSerology()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Match grade ranking - gDNA vs serology", ((string[])(null)));
#line 25
  this.ScenarioSetup(scenarioInfo);
#line 26
    testRunner.Given("a patient has multiple matches with different match grades", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 27
    testRunner.When("I run an 8/8 search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
    testRunner.Then("a full gDNA match should be returned above a full serology match", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Match grade ranking - cDNA vs protein")]
        public virtual void MatchGradeRanking_CDNAVsProtein()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Match grade ranking - cDNA vs protein", ((string[])(null)));
#line 30
  this.ScenarioSetup(scenarioInfo);
#line 31
    testRunner.Given("a patient has multiple matches with different match grades", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 32
    testRunner.When("I run an 8/8 search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
    testRunner.Then("a full cDNA match should be returned above a full protein match", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Match grade ranking - cDNA vs g-group")]
        public virtual void MatchGradeRanking_CDNAVsG_Group()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Match grade ranking - cDNA vs g-group", ((string[])(null)));
#line 35
  this.ScenarioSetup(scenarioInfo);
#line 36
    testRunner.Given("a patient has multiple matches with different match grades", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 37
    testRunner.When("I run an 8/8 search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
    testRunner.Then("a full cDNA match should be returned above a full g-group match", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Match grade ranking - cDNA vs p-group")]
        public virtual void MatchGradeRanking_CDNAVsP_Group()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Match grade ranking - cDNA vs p-group", ((string[])(null)));
#line 40
  this.ScenarioSetup(scenarioInfo);
#line 41
    testRunner.Given("a patient has multiple matches with different match grades", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
    testRunner.When("I run an 8/8 search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
    testRunner.Then("a full cDNA match should be returned above a full p-group match", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Match grade ranking - cDNA vs serology")]
        public virtual void MatchGradeRanking_CDNAVsSerology()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Match grade ranking - cDNA vs serology", ((string[])(null)));
#line 45
  this.ScenarioSetup(scenarioInfo);
#line 46
    testRunner.Given("a patient has multiple matches with different match grades", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 47
    testRunner.When("I run an 8/8 search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 48
    testRunner.Then("a full cDNA match should be returned above a full serology match", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Match grade ranking - protein vs g-group")]
        public virtual void MatchGradeRanking_ProteinVsG_Group()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Match grade ranking - protein vs g-group", ((string[])(null)));
#line 50
  this.ScenarioSetup(scenarioInfo);
#line 51
    testRunner.Given("a patient has multiple matches with different match grades", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 52
    testRunner.When("I run an 8/8 search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 53
    testRunner.Then("a full protein match should be returned above a full g-group match", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Match grade ranking - protein vs p-group")]
        public virtual void MatchGradeRanking_ProteinVsP_Group()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Match grade ranking - protein vs p-group", ((string[])(null)));
#line 55
  this.ScenarioSetup(scenarioInfo);
#line 56
    testRunner.Given("a patient has multiple matches with different match grades", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 57
    testRunner.When("I run an 8/8 search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
    testRunner.Then("a full protein match should be returned above a full p-group match", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Match grade ranking - protein vs serology")]
        public virtual void MatchGradeRanking_ProteinVsSerology()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Match grade ranking - protein vs serology", ((string[])(null)));
#line 60
  this.ScenarioSetup(scenarioInfo);
#line 61
    testRunner.Given("a patient has multiple matches with different match grades", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 62
    testRunner.When("I run an 8/8 search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 63
    testRunner.Then("a full protein match should be returned above a full serology match", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Match grade ranking - g-group vs p-group")]
        public virtual void MatchGradeRanking_G_GroupVsP_Group()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Match grade ranking - g-group vs p-group", ((string[])(null)));
#line 65
  this.ScenarioSetup(scenarioInfo);
#line 66
    testRunner.Given("a patient has multiple matches with different match grades", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 67
    testRunner.When("I run an 8/8 search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
    testRunner.Then("a full g-group match should be returned above a full p-group match", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Match grade ranking - g-group vs serology")]
        public virtual void MatchGradeRanking_G_GroupVsSerology()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Match grade ranking - g-group vs serology", ((string[])(null)));
#line 70
  this.ScenarioSetup(scenarioInfo);
#line 71
    testRunner.Given("a patient has multiple matches with different match grades", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 72
    testRunner.When("I run an 8/8 search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 73
    testRunner.Then("a full g-group match should be returned above a full serology match", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Match grade ranking - p-group vs serology")]
        public virtual void MatchGradeRanking_P_GroupVsSerology()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Match grade ranking - p-group vs serology", ((string[])(null)));
#line 75
  this.ScenarioSetup(scenarioInfo);
#line 76
    testRunner.Given("a patient has multiple matches with different match grades", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 77
    testRunner.When("I run an 8/8 search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 78
    testRunner.Then("a full p-group match should be returned above a full serology match", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
