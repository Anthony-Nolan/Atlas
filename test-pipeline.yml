trigger: none

schedules:
  - cron: "0 0,13 * * *"
    displayName: Twice daily build and run System Tests
    branches:
      include:
      - master

pr: none

variables:
  - group: Terraform
  - group: TestTerraform
  - name: RUN_CI_PERF_TESTS_OFF
    value: 'This will get defined as an Environment Variable, which will enable various Perf-Test-only tests. See IgnoreExceptOnCiPerfTestAttribute.cs'
  
jobs: 
- job: Terraform
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
      displayName: 'Use Terraform 1.3.6'
      inputs:
        terraformVersion: '1.3.6'
    - script: 'terraform init -reconfigure -backend-config="storage_account_name=$(BACKEND_STORAGE_ACCOUNT_NAME)" -backend-config="container_name=$(BACKEND_STORAGE_CONTAINER_NAME)" -backend-config="resource_group_name=$(BACKEND_RESOURCE_GROUP_NAME)"'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/system-tests'
      displayName: 'terraform init'
      env:
        ARM_ACCESS_KEY: $(ARM_ACCESS_KEY)
    - script: |
        echo Validating the syntax

        terraform validate
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/system-tests'
      displayName: 'terraform validate'
      env:
        ARM_ACCESS_KEY: $(ARM_ACCESS_KEY)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
    - bash: |
        echo Select terraform workspace and create if not exists
        terraform workspace select $(TerraformWorkspace) || terraform workspace new $(TerraformWorkspace)
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/system-tests'
      displayName: 'terraform workspace'
      env:
        ARM_ACCESS_KEY: $(ARM_ACCESS_KEY)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
    - script: 'terraform apply -auto-approve -input=false'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/system-tests'
      displayName: 'terraform apply'
      env:
        ARM_ACCESS_KEY: $(ARM_ACCESS_KEY)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        TF_VAR_DATABASE_SERVER_ADMIN_LOGIN_PASSWORD: $(TF_VAR_DATABASE_SERVER_ADMIN_LOGIN_PASSWORD)

    - task: Powershell@2
      name: OutputTFVars
      env:
        ARM_ACCESS_KEY: $(ARM_ACCESS_KEY)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
      inputs:
        targetType: 'inline'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/system-tests'
        script: |
          $output = terraform output -json

          $json = $output | ConvertFrom-Json

          Write-Host $json

          foreach($prop in $json.psobject.properties) {

          Write-Host("##vso[task.setvariable variable=$($prop.Name);isOutput=true;]$($prop.Value.value)")
          Write-Host(“Setting {0} to {1}” –f $prop.name, $prop.Value.value)
          }      
    
- job: Matching_Algorithm_Integration_Tests
  dependsOn: Terraform
  variables:
    matching_algorithm_db_connection_string: $[ dependencies.Terraform.outputs['OutputTFVars.matching_algorithm_db_connection_string'] ]
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: DotNetCoreCLI@2
    displayName: 'Nuget Restore'
    inputs:
      command: 'restore'
      feedsToUse: 'select'
  - task: bendayconsulting.build-task.setjsonconfigconnectionstring.setjsonconfigconnectionstring@1
    displayName: 'Update connection string ''SqlA'''
    inputs:
      filename: '$(System.DefaultWorkingDirectory)/Atlas.MatchingAlgorithm.Test.Integration/appsettings.json'
      keyname: SqlA
      connectionstringvalue: '$(matching_algorithm_db_connection_string)'

  - task: bendayconsulting.build-task.setjsonconfigconnectionstring.setjsonconfigconnectionstring@1
    displayName: 'Update connection string ''SqlB'''
    inputs:
      filename: '$(System.DefaultWorkingDirectory)/Atlas.MatchingAlgorithm.Test.Integration/appsettings.json'
      keyname: SqlB
      connectionstringvalue: '$(matching_algorithm_db_connection_string)'

  - task: bendayconsulting.build-task.setjsonconfigconnectionstring.setjsonconfigconnectionstring@1
    displayName: 'Update connection string ''PersistentSql'' '
    inputs:
      filename: '$(System.DefaultWorkingDirectory)/Atlas.MatchingAlgorithm.Test.Integration/appsettings.json'
      keyname: PersistentSql
      connectionstringvalue: '$(matching_algorithm_db_connection_string)'
  - task: DotNetCoreCLI@2
    displayName: 'Matching Integration Tests'
    inputs:
      command: test
      projects: '$(System.DefaultWorkingDirectory)/Atlas.MatchingAlgorithm.Test.Integration/Atlas.MatchingAlgorithm.Test.Integration.csproj'
      arguments: '--no-restore -v d'
      
- job: Matching_Algorithm_Validation_Tests
  dependsOn: Terraform
  variables:
    matching_algorithm_validation_db_connection_string: $[ dependencies.Terraform.outputs['OutputTFVars.matching_algorithm_validation_db_connection_string'] ]
    azure_storage_account_connection_string: $[ dependencies.Terraform.outputs['OutputTFVars.azure_storage_account_connection_string'] ]
    azure_app_configuration_connection_string: $[ dependencies.Terraform.outputs['OutputTFVars.azure_app_configuration_connection_string'] ]
  pool:
    vmImage: 'ubuntu-latest'
  #Your build pipeline references an undefined variable named ‘Parameters.packagesDirectory’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
  steps:
  - task: UseDotNet@2
    displayName: 'Use .Net sdk'
    inputs:
      version: 6.0.x

  - task: DotNetCoreCLI@2
    displayName: 'Nuget Restore'
    inputs:
      command: 'restore'
      feedsToUse: 'select'

  - task: bendayconsulting.build-task.setjsonconfigconnectionstring.setjsonconfigconnectionstring@1
    displayName: 'Update connection string ''DonorSql'''
    inputs:
      filename: '$(System.DefaultWorkingDirectory)/Atlas.MatchingAlgorithm.Test.Validation/appsettings.json'
      keyname: DonorSql
      connectionstringvalue: '$(matching_algorithm_validation_db_connection_string)'
      
  - task: bendayconsulting.build-task.setjsonconfigconnectionstring.setjsonconfigconnectionstring@1
    displayName: 'Update connection string ''SqlA'''
    inputs:
      filename: '$(System.DefaultWorkingDirectory)/Atlas.MatchingAlgorithm.Test.Validation/appsettings.json'
      keyname: SqlA
      connectionstringvalue: '$(matching_algorithm_validation_db_connection_string)'

  - task: bendayconsulting.build-task.setjsonconfigconnectionstring.setjsonconfigconnectionstring@1
    displayName: 'Update connection string ''SqlB'''
    inputs:
      filename: '$(System.DefaultWorkingDirectory)/Atlas.MatchingAlgorithm.Test.Validation/appsettings.json'
      keyname: SqlB
      connectionstringvalue: '$(matching_algorithm_validation_db_connection_string)'

  - task: bendayconsulting.build-task.setjsonconfigconnectionstring.setjsonconfigconnectionstring@1
    displayName: 'Update connection string ''PersistentSql'' '
    inputs:
      filename: '$(System.DefaultWorkingDirectory)/Atlas.MatchingAlgorithm.Test.Validation/appsettings.json'
      keyname: PersistentSql
      connectionstringvalue: '$(matching_algorithm_validation_db_connection_string)'

  - task: bendayconsulting.build-task.setjsonvalue.setjsonvalue@1
    displayName: 'Set Azure Storage ConnectionString'
    inputs:
      filename: '$(System.DefaultWorkingDirectory)/Atlas.MatchingAlgorithm.Test.Validation/appsettings.json'
      numberOfLevels: 2
      keyname1: AzureStorage
      keyname2: ConnectionString
      valueToSet: '$(azure_storage_account_connection_string)'
      
  - task: bendayconsulting.build-task.setjsonvalue.setjsonvalue@1
    displayName: 'Set MAC Dictionary ConnectionString'
    inputs:
      filename: '$(System.DefaultWorkingDirectory)/Atlas.MatchingAlgorithm.Test.Validation/appsettings.json'
      numberOfLevels: 2
      keyname1: MacDictionary
      keyname2: AzureStorageConnectionString
      valueToSet: '$(azure_storage_account_connection_string)'
      
  - task: bendayconsulting.build-task.setjsonvalue.setjsonvalue@1
    displayName: 'Set HLA Metadata Dictionary ConnectionString'
    inputs:
      filename: '$(System.DefaultWorkingDirectory)/Atlas.MatchingAlgorithm.Test.Validation/appsettings.json'
      numberOfLevels: 2
      keyname1: HlaMetadataDictionary
      keyname2: AzureStorageConnectionString
      valueToSet: '$(azure_storage_account_connection_string)'

  - task: bendayconsulting.build-task.setjsonvalue.setjsonvalue@1
    displayName: 'Set Notification Service Bus ConnectionString'
    inputs:
      filename: '$(System.DefaultWorkingDirectory)/Atlas.MatchingAlgorithm.Test.Validation/appsettings.json'
      numberOfLevels: 2
      keyname1: NotificationsServiceBus
      keyname2: ConnectionString
#     ServiceBus is not used directly in tests, but DI will fail without a valid service bus connection string. 
      valueToSet: '$(SERVICE_BUS_CONNECTION_STRING)'

  - task: bendayconsulting.build-task.setjsonvalue.setjsonvalue@1
    displayName: 'Set Azure App Configuration ConnectionString'
    inputs:
      filename: '$(System.DefaultWorkingDirectory)/Atlas.MatchingAlgorithm.Test.Validation/appsettings.json'
      numberOfLevels: 2
      keyname1: AzureAppConfiguration
      keyname2: ConnectionString
      valueToSet: '$(azure_app_configuration_connection_string)'

  - task: DotNetCoreCLI@2
    displayName: 'Matching Validation Tests'
    inputs:
      command: test
      projects: '$(System.DefaultWorkingDirectory)/Atlas.MatchingAlgorithm.Test.Validation/Atlas.MatchingAlgorithm.Test.Validation.csproj'
      arguments: '--no-restore -v d'
      
- job: Donor_Import_Integration_Tests
  dependsOn: Terraform
  variables:
    donor_import_db_connection_string: $[ dependencies.Terraform.outputs['OutputTFVars.donor_import_db_connection_string'] ]
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - task: DotNetCoreCLI@2
      displayName: 'Nuget Restore'
      inputs:
        command: 'restore'
        feedsToUse: 'select'
    - task: bendayconsulting.build-task.setjsonconfigconnectionstring.setjsonconfigconnectionstring@1
      displayName: 'Update Sql connection string' 
      inputs:
        filename: '$(System.DefaultWorkingDirectory)/Atlas.DonorImport.Test.Integration/appsettings.json'
        keyname: DonorStoreSql
        connectionstringvalue: '$(donor_import_db_connection_string)'

    - task: DotNetCoreCLI@2
      displayName: 'Donor Import Integration Tests'
      inputs:
        command: test
        projects: '$(System.DefaultWorkingDirectory)/Atlas.DonorImport.Test.Integration/Atlas.DonorImport.Test.Integration.csproj'
        arguments: '--no-restore -v d'
- job: Match_Prediction_Integration_Tests
  dependsOn: Terraform
  variables:
    match_prediction_db_connection_string: $[ dependencies.Terraform.outputs['OutputTFVars.match_prediction_db_connection_string'] ]
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - task: DotNetCoreCLI@2
      displayName: 'Nuget Restore'
      inputs:
        command: 'restore'
        feedsToUse: 'select'
    - task: bendayconsulting.build-task.setjsonconfigconnectionstring.setjsonconfigconnectionstring@1
      displayName: 'Update Sql connection string' 
      inputs:
        filename: '$(System.DefaultWorkingDirectory)/Atlas.MatchPrediction.Test.Integration/appsettings.json'
        keyname: MatchPredictionSql
        connectionstringvalue: '$(match_prediction_db_connection_string)'
    - task: DotNetCoreCLI@2
      displayName: 'MPA Integration Tests'
      inputs:
        command: test
        projects: '$(System.DefaultWorkingDirectory)/Atlas.MatchPrediction.Test.Integration/Atlas.MatchPrediction.Test.Integration.csproj'
        arguments: '--no-restore -v d'
- job: Multiple_Allele_Code_Dictionary_Integration_Tests
  dependsOn: Terraform
  variables:
    azure_storage_account_connection_string: $[ dependencies.Terraform.outputs['OutputTFVars.azure_storage_account_connection_string'] ]
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - task: DotNetCoreCLI@2
      displayName: 'Nuget Restore'
      inputs:
        command: 'restore'
        feedsToUse: 'select'
    - task: bendayconsulting.build-task.setjsonvalue.setjsonvalue@1
      displayName: 'Set Azure Storage ConnectionString'
      inputs:
        filename: '$(System.DefaultWorkingDirectory)/Atlas.MultipleAlleleCodeDictionary.Test.Integration/appsettings.json'
        numberOfLevels: 2
        keyname1: MacDictionary
        keyname2: AzureStorageConnectionString
        valueToSet: '$(azure_storage_account_connection_string)'
    - task: DotNetCoreCLI@2
      displayName: 'MacDictionary Integration Tests'
      inputs:
        command: test
        projects: '$(System.DefaultWorkingDirectory)/Atlas.MultipleAlleleCodeDictionary.Test.Integration/Atlas.MultipleAlleleCodeDictionary.Test.Integration.csproj'
        arguments: '--no-restore -v d'

