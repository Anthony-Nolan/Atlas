// <auto-generated />
using System;
using Atlas.MatchingAlgorithm.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Atlas.MatchingAlgorithm.Data.Migrations
{
    [DbContext(typeof(SearchAlgorithmContext))]
    [Migration("20231218155540_AlterIndexOnDonorManagementLogTableIndexKeyIsOnlyLastUpdateDateTime")]
    partial class AlterIndexOnDonorManagementLogTableIndexKeyIsOnlyLastUpdateDateTime
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.Donor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("A_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("A_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("B_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("B_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DPB1_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DPB1_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DQB1_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DQB1_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DRB1_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DRB1_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DonorId")
                        .HasColumnType("int");

                    b.Property<int>("DonorType")
                        .HasColumnType("int");

                    b.Property<string>("EthnicityCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalDonorCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailableForSearch")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("RegistryCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DonorId")
                        .HasDatabaseName("FI_DonorIdsWithoutLocusDQB1")
                        .HasFilter("[DQB1_1] IS NULL AND [DQB1_2] IS NULL");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("DonorId"), new[] { "DQB1_1", "DQB1_2" });

                    b.ToTable("Donors");
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.DonorManagementLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DonorId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("LastUpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("SequenceNumberOfLastUpdate")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DonorId")
                        .IsUnique();

                    b.HasIndex("LastUpdateDateTime");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("LastUpdateDateTime"), new[] { "DonorId" });

                    b.ToTable("DonorManagementLogs");
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.HlaName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HlaNames");
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.HlaNamePGroupRelationAtA", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("HlaNameId")
                        .HasColumnType("int");

                    b.Property<int>("PGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HlaNamePGroupRelationAtA");
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.HlaNamePGroupRelationAtB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("HlaNameId")
                        .HasColumnType("int");

                    b.Property<int>("PGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HlaNamePGroupRelationAtB");
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.HlaNamePGroupRelationAtC", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("HlaNameId")
                        .HasColumnType("int");

                    b.Property<int>("PGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HlaNamePGroupRelationAtC");
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.HlaNamePGroupRelationAtDqb1", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("HlaNameId")
                        .HasColumnType("int");

                    b.Property<int>("PGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HlaNamePGroupRelationAtDQB1");
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.HlaNamePGroupRelationAtDrb1", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("HlaNameId")
                        .HasColumnType("int");

                    b.Property<int>("PGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HlaNamePGroupRelationAtDRB1");
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.MatchingHlaAtA", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("DonorId")
                        .HasColumnType("int");

                    b.Property<int>("HlaNameId")
                        .HasColumnType("int");

                    b.Property<int>("TypePosition")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MatchingHlaAtA");
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.MatchingHlaAtB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("DonorId")
                        .HasColumnType("int");

                    b.Property<int>("HlaNameId")
                        .HasColumnType("int");

                    b.Property<int>("TypePosition")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MatchingHlaAtB");
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.MatchingHlaAtC", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("DonorId")
                        .HasColumnType("int");

                    b.Property<int>("HlaNameId")
                        .HasColumnType("int");

                    b.Property<int>("TypePosition")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MatchingHlaAtC");
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.MatchingHlaAtDqb1", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("DonorId")
                        .HasColumnType("int");

                    b.Property<int>("HlaNameId")
                        .HasColumnType("int");

                    b.Property<int>("TypePosition")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MatchingHlaAtDQB1");
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.MatchingHlaAtDrb1", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("DonorId")
                        .HasColumnType("int");

                    b.Property<int>("HlaNameId")
                        .HasColumnType("int");

                    b.Property<int>("TypePosition")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MatchingHlaAtDRB1");
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.PGroupName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PGroupNames");
                });
#pragma warning restore 612, 618
        }
    }
}
