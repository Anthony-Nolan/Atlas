// <auto-generated />
using System;
using Atlas.MatchingAlgorithm.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Atlas.MatchingAlgorithm.Data.Migrations
{
    [DbContext(typeof(SearchAlgorithmContext))]
    [Migration("20201107105103_NormaliseMatchingData")]
    partial class NormaliseMatchingData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.Donor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("A_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("A_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("B_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("B_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DPB1_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DPB1_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DQB1_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DQB1_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DRB1_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DRB1_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DonorId")
                        .HasColumnType("int");

                    b.Property<int>("DonorType")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailableForSearch")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.HasIndex("DonorId")
                        .HasName("FI_DonorIdsWithoutLocusDQB1")
                        .HasFilter("[DQB1_1] IS NULL AND [DQB1_2] IS NULL")
                        .HasAnnotation("SqlServer:Include", new[] { "DQB1_1", "DQB1_2" });

                    b.ToTable("Donors");
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.DonorManagementLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DonorId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("LastUpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("SequenceNumberOfLastUpdate")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DonorId")
                        .IsUnique();

                    b.ToTable("DonorManagementLogs");
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.HlaName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HlaNames");
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.HlaNamePGroupRelation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HlaName_Id")
                        .HasColumnType("int");

                    b.Property<int?>("PGroup_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HlaName_Id");

                    b.HasIndex("PGroup_Id");

                    b.ToTable("HlaNamePGroupRelations");
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.MatchingHlaAtA", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DonorId")
                        .HasColumnType("int");

                    b.Property<int>("HlaNameId")
                        .HasColumnType("int");

                    b.Property<int>("TypePosition")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DonorId");

                    b.HasIndex("HlaNameId");

                    b.ToTable("MatchingHlaAtA");
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.MatchingHlaAtB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DonorId")
                        .HasColumnType("int");

                    b.Property<int>("HlaNameId")
                        .HasColumnType("int");

                    b.Property<int>("TypePosition")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DonorId");

                    b.HasIndex("HlaNameId");

                    b.ToTable("MatchingHlaAtB");
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.MatchingHlaAtC", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DonorId")
                        .HasColumnType("int");

                    b.Property<int>("HlaNameId")
                        .HasColumnType("int");

                    b.Property<int>("TypePosition")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DonorId");

                    b.HasIndex("HlaNameId");

                    b.ToTable("MatchingHlaAtC");
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.MatchingHlaAtDqb1", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DonorId")
                        .HasColumnType("int");

                    b.Property<int>("HlaNameId")
                        .HasColumnType("int");

                    b.Property<int>("TypePosition")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DonorId");

                    b.HasIndex("HlaNameId");

                    b.ToTable("MatchingHlaAtDQB1");
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.MatchingHlaAtDrb1", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DonorId")
                        .HasColumnType("int");

                    b.Property<int>("HlaNameId")
                        .HasColumnType("int");

                    b.Property<int>("TypePosition")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DonorId");

                    b.HasIndex("HlaNameId");

                    b.ToTable("MatchingHlaAtDRB1");
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.PGroupName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PGroupNames");
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.HlaNamePGroupRelation", b =>
                {
                    b.HasOne("Atlas.MatchingAlgorithm.Data.Models.Entities.HlaName", "HlaName")
                        .WithMany()
                        .HasForeignKey("HlaName_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Atlas.MatchingAlgorithm.Data.Models.Entities.PGroupName", "PGroup")
                        .WithMany()
                        .HasForeignKey("PGroup_Id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.MatchingHlaAtA", b =>
                {
                    b.HasOne("Atlas.MatchingAlgorithm.Data.Models.Entities.Donor", "Donor")
                        .WithMany()
                        .HasForeignKey("DonorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Atlas.MatchingAlgorithm.Data.Models.Entities.HlaName", "HlaName")
                        .WithMany()
                        .HasForeignKey("HlaNameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.MatchingHlaAtB", b =>
                {
                    b.HasOne("Atlas.MatchingAlgorithm.Data.Models.Entities.Donor", "Donor")
                        .WithMany()
                        .HasForeignKey("DonorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Atlas.MatchingAlgorithm.Data.Models.Entities.HlaName", "HlaName")
                        .WithMany()
                        .HasForeignKey("HlaNameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.MatchingHlaAtC", b =>
                {
                    b.HasOne("Atlas.MatchingAlgorithm.Data.Models.Entities.Donor", "Donor")
                        .WithMany()
                        .HasForeignKey("DonorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Atlas.MatchingAlgorithm.Data.Models.Entities.HlaName", "HlaName")
                        .WithMany()
                        .HasForeignKey("HlaNameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.MatchingHlaAtDqb1", b =>
                {
                    b.HasOne("Atlas.MatchingAlgorithm.Data.Models.Entities.Donor", "Donor")
                        .WithMany()
                        .HasForeignKey("DonorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Atlas.MatchingAlgorithm.Data.Models.Entities.HlaName", "HlaName")
                        .WithMany()
                        .HasForeignKey("HlaNameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Atlas.MatchingAlgorithm.Data.Models.Entities.MatchingHlaAtDrb1", b =>
                {
                    b.HasOne("Atlas.MatchingAlgorithm.Data.Models.Entities.Donor", "Donor")
                        .WithMany()
                        .HasForeignKey("DonorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Atlas.MatchingAlgorithm.Data.Models.Entities.HlaName", "HlaName")
                        .WithMany()
                        .HasForeignKey("HlaNameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
